game_ready = False
gameparameters = 0
words_ready = False
beginner_word_list = make_word_list()



##----------SET GAME PARAMETERS----------------
def set_parameters():
  while game_ready is False:
  
    while gameparameters < 3:
      difficulty = 0
      name = None
      board_len = 0
  
      if name is None:
        name = input(f"What's your callsign, officer?\n")
        p1 = Player(name)
        if p1.name != '' or p1.name is not None:
          gameparameters += 1
  
      if board_len == 0:
        this_board = p1.set_board()
        p1.board, p1.mask, board_len = this_board[0], this_board[1], this_board[2]
        if p1.board is not None:
          gameparameters += 1
  
      if difficulty == 0:
        difficulty = set_difficulty()
        gameparameters += 1
  
      print (f"\nYour game will start with the following parameters:\nCallsign: {p1.name}\nBoard size: {board_len}x{board_len}, {board_sizes_dict.get(board_len)}\nEnemy Intelligence difficulty: {difficulties_dict.get(difficulty)}\n")
      param_confirmation = input(f'Confirm game parameters? Type Y/y, Yes or hit Enter to confirm. Other commands will reset the parameters.\n').upper()
  
      if param_confirmation == '' or param_confirmation.upper() == 'Y' or param_confirmation.upper() == 'YES':
          npc = NPC(difficulty)
          game_ready = True
      else:
        gameparameters = 0
        del p1

  print(f'Parameters Ready.\n----------------------------------------------------------------------------------\n')
  
  print(f'Please choose {(board_len//2)} code words.')


##----------SET BOARD WORDS----------------
def set_board_words():
  while words_ready is False:
    while len(p1.word_list) < (board_len//2):
        place_word_player(p1.board, p1)
        print(p1.board)
    words_confirmation = input(f'Confirm board? Type Y/y, Yes or hit Enter to confirm. Other commands will reset the board.\n').upper()
    if words_confirmation == '' or words_confirmation.upper() == 'Y' or words_confirmation.upper() == 'YES':
      print ('Encrypting Enemy Comms...')
      while len(npc.word_list) < (board_len//2):
        place_word_npc(npc.board, npc)
      print ('Enemy Comms Encrypted.')
      words_ready = True
    else:
      p1.word_list = []
  
  print(f'Communications Encryption Finished.\n----------------------------------------------------------------------------------\n')

##----------START MATCH----------------




